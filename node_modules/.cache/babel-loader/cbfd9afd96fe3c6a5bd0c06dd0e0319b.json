{"ast":null,"code":"export const loadArts = () => {\n  return dispatch => {\n    fetch('http://localhost:4000/arts').then(response => {\n      return response.json();\n    }).then(responseJSON => {\n      dispatch({\n        type: 'SHOW_ARTS',\n        arts: responseJSON\n      });\n    });\n  };\n};\nexport const findArtById = id => {\n  return dispatch => {\n    fetch('http://localhost:4000/arts/id').then(response => {\n      return response.json();\n    }).then(responseJSON => {\n      dispatch({\n        type: 'SHOW_ART',\n        arts: responseJSON\n      });\n      debugger;\n    });\n  };\n};","map":{"version":3,"sources":["/mnt/c/Users/annai/dev/flatiron/labs/Projects/Art_Catching/FrontendArtCatching/src/actions/artActions.js"],"names":["loadArts","dispatch","fetch","then","response","json","responseJSON","type","arts","findArtById","id"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,MAAM;AAE1B,SAAOC,QAAD,IAAc;AAChBC,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAI;AACd,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAHL,EAGOF,IAHP,CAGYG,YAAY,IAAI;AACpBL,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,IAAI,EAAEF;AAA3B,OAAD,CAAR;AACH,KALL;AAMH,GAPD;AASH,CAXM;AAaP,OAAO,MAAMG,WAAW,GAAIC,EAAD,IAAQ;AAE/B,SAAOT,QAAD,IAAc;AAChBC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAI;AACd,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAHL,EAGOF,IAHP,CAGYG,YAAY,IAAI;AACpBL,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,IAAI,EAAEF;AAA1B,OAAD,CAAR;AACA;AACH,KANL;AAOH,GARD;AAUH,CAZM","sourcesContent":["export const loadArts = () => {\r\n\r\n    return(dispatch) => {\r\n        fetch('http://localhost:4000/arts')\r\n            .then(response => {\r\n                return response.json()\r\n            }).then(responseJSON => {\r\n                dispatch({ type: 'SHOW_ARTS', arts: responseJSON })\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const findArtById = (id) => {\r\n\r\n    return(dispatch) => {\r\n        fetch('http://localhost:4000/arts/id')\r\n            .then(response => {\r\n                return response.json()\r\n            }).then(responseJSON => {\r\n                dispatch({ type: 'SHOW_ART', arts: responseJSON })\r\n                debugger\r\n            })\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}